
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_stopping_lowrank.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_stopping_lowrank.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_stopping_lowrank.py:


=================================================
Plot stopping time for low rank matrix completion
=================================================

Plot the stopping time for low rank matrix completion.

.. GENERATED FROM PYTHON SOURCE LINES 8-62



.. image:: /auto_examples/images/sphx_glr_plot_stopping_lowrank_001.png
    :alt: plot stopping lowrank
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    usetex mode requires TeX.
    1.0
    2.5555555555555554
    4.111111111111111
    5.666666666666667
    7.222222222222222
    8.777777777777779
    10.333333333333334
    11.88888888888889
    13.444444444444445
    15.0






|

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt
    from numpy.linalg import norm
    from celer.plot_utils import configure_plt

    from iterreg.low_rank.solvers import dual_primal_low_rank

    configure_plt()


    d = 20
    np.random.seed(0)
    mask = np.zeros([d, d], dtype=bool)
    idx = np.random.choice(d ** 2, d ** 2 // 5, replace=False)
    mask.flat[idx] = True

    Y_true = np.random.randn(d, 5) @ np.random.randn(5, d)
    Y_true /= (norm(Y_true, ord="fro") / 20)
    Y = Y_true.copy()

    Y[~mask] = 0

    W_star, Theta, _ = dual_primal_low_rank(
        mask, Y, max_iter=20000, f_store=100, verbose=0)


    n_deltas = 10
    deltas = np.linspace(1, 15, num=n_deltas)

    noise = np.random.randn(d, d)
    distances = dict()
    f_store = 1

    for delta in deltas:
        print(delta)
        Y_delta = Y + delta * noise / norm(noise)
        w, theta, dist = dual_primal_low_rank(
            mask, Y_delta, max_iter=1000, verbose=False, f_store=f_store,
            limit=W_star)

        distances[delta] = dist

    fig1, ax = plt.subplots(1, 1, constrained_layout=True, figsize=(8, 4))
    n_points = 500
    for delta in deltas[3:-1]:
        x_plt = f_store * np.arange(len(distances[delta]))
        y_plt = distances[delta] / norm(W_star)
        ax.semilogy(x_plt[:n_points], y_plt[:n_points],
                    label=r"$\delta={:.1f}$".format(delta))
    plt.ylabel(r'$||w_k^\delta - w^\star|| / ||w^\star||$')
    plt.xlabel("Iteration $k$")
    plt.legend(loc='upper right', ncol=3, fontsize=16)
    plt.show(block=False)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.291 seconds)


.. _sphx_glr_download_auto_examples_plot_stopping_lowrank.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_stopping_lowrank.py <plot_stopping_lowrank.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_stopping_lowrank.ipynb <plot_stopping_lowrank.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
